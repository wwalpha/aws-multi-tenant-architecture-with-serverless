"use strict";angular.module("clientApp",["ngRoute","angular-jwt"]),angular.module("clientApp").factory("httpRequestInterceptor",["$rootScope",function(a){return{request:function(b){return a.bearerToken&&(b.headers.Authorization="Bearer "+a.bearerToken),b}}}]),angular.module("clientApp").config(["$routeProvider","$httpProvider","$locationProvider",function(a,b,c){b.defaults.useXDomain=!0,delete b.defaults.headers.common["X-Requested-With"],b.interceptors.push("httpRequestInterceptor"),a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"mainController"}).when("/login",{templateUrl:"views/login.html",controller:"LoginCtrl",controllerAs:"login"}).when("/register",{templateUrl:"views/register.html",controller:"RegisterCtrl",controllerAs:"register"}).when("/logout",{templateUrl:"views/logout.html",controller:"LogoutCtrl",controllerAs:"logout"}).when("/confirm",{templateUrl:"views/confirm.html",controller:"ConfirmCtrl",controllerAs:"confirm"}).when("/users",{templateUrl:"views/users.html",controller:"UsersCtrl",controllerAs:"users"}).when("/products",{templateUrl:"views/products.html",controller:"ProductsCtrl",controllerAs:"products"}).when("/product/add",{templateUrl:"views/product-add.html",controller:"ProductAddCtrl",controllerAs:"productAdd"}).when("/product/edit/:id",{templateUrl:"views/product-edit.html",controller:"ProductEditCtrl",controllerAs:"productEdit"}).when("/product/delete/:id",{templateUrl:"views/product-delete.html",controller:"ProductDeleteCtrl",controllerAs:"productDelete"}).when("/tenants",{templateUrl:"views/tenants.html",controller:"TenantsCtrl",controllerAs:"tenants"}).when("/tenant/edit/:id",{templateUrl:"views/tenant-edit.html",controller:"TenantEditCtrl",controllerAs:"tenantEdit"}).when("/tenant/delete/:id",{templateUrl:"views/tenant-delete.html",controller:"TenantDeleteCtrl",controllerAs:"tenantDelete"}).when("/users",{templateUrl:"views/users.html",controller:"UsersCtrl",controllerAs:"users"}).when("/user/add",{templateUrl:"views/user-add.html",controller:"UserAddCtrl",controllerAs:"userAdd"}).when("/user/edit/:id",{templateUrl:"views/user-edit.html",controller:"UserEditCtrl",controllerAs:"userEdit"}).when("/user/delete/:id",{templateUrl:"views/user-delete.html",controller:"UserDeleteCtrl",controllerAs:"userDelete"}).when("/user/enable/:id",{templateUrl:"views/user-enable.html",controller:"UserEnableCtrl",controllerAs:"userEnable"}).when("/orders",{templateUrl:"views/orders.html",controller:"OrdersCtrl",controllerAs:"orders"}).when("/order/add",{templateUrl:"views/order-add.html",controller:"OrderAddCtrl",controllerAs:"orderAdd"}).when("/order/edit/:id",{templateUrl:"views/order-edit.html",controller:"OrderEditCtrl",controllerAs:"orderEdit"}).when("/order/delete/:id",{templateUrl:"views/order-delete.html",controller:"OrderDeleteCtrl",controllerAs:"orderDelete"}).when("/product/:id",{templateUrl:"views/product-view.html",controller:"ProductViewCtrl",controllerAs:"productView"}).otherwise({redirectTo:"#!/login"})}]),angular.module("clientApp").run(["$rootScope","$location","$http","Constants",function(a,b,c,d){a.$on("$locationChangeStart",function(c,d,e){var f=!1,g=!1;"/logout"===b.path()?(a.isUserLoggedIn=!1,a.bearerToken="",a.currentUser="",a.userDisplayName="",g=!0):(f=-1===$.inArray(b.path(),["/login","/register","/confirm"]),void 0===a.isUserLoggedIn&&(a.isUserLoggedIn=!1)),(g||f&&!a.isUserLoggedIn)&&b.path("/login")}),a.isAdminUser=function(){return a.userRole===d.SYSTEM_ADMIN_ROLE||a.userRole===d.TENANT_ADMIN_ROLE},a.isSystemAdminUser=function(){return a.userRole===d.SYSTEM_ADMIN_ROLE},a.isTenantAdminUser=function(){return a.userRole===d.TENANT_ADMIN_ROLE},a.isSystemUser=function(){var b=!1;return(a.userRole===d.SYSTEM_ADMIN_ROLE||a.userRole===d.SYSTEM_SUPPORT_ROLE)&&(b=!0),b},a.isTenantUser=function(){var b=!1;return(a.userRole===d.TENANT_ADMIN_ROLE||a.userRole===d.TENANT_USER_ROLE)&&(b=!0),b},a.roleToDisplayName=function(a){var b="";return"TenantAdmin"===a?b="Administrator":"TenantUser"===a?b="Order Manager":"SystemAdmin"===a?b="System Admin":"SystemUser"===a&&(b="Customer Support"),b},a.isActiveLink=function(a){var c=a===b.path();return c},a.isLinkEnabled=function(b){var c=!1;return a.isUserLoggedIn?$.inArray(b,["/login","/"])>=0?c=!0:"/tenants"===b?c=a.isSystemUser():"/users"===b?c=a.isAdminUser():$.inArray(b,["/products","/orders"])>=0&&(c=a.isTenantUser()):$.inArray(b,["/login","/register","confirm"])>=0&&(c=!0),c}}]),angular.module("clientApp").constant("Constants",{AUTH_MANAGER_URL:"https://zllz247e38.execute-api.us-west-2.amazonaws.com/prod",USER_MANAGER_URL:"https://zllz247e38.execute-api.us-west-2.amazonaws.com/prod",TENANT_MANAGER_URL:"https://zllz247e38.execute-api.us-west-2.amazonaws.com/prod",TENANT_REGISTRATION_URL:"https://zllz247e38.execute-api.us-west-2.amazonaws.com/prod",PRODUCT_MANAGER_URL:"https://zllz247e38.execute-api.us-west-2.amazonaws.com/prod",ORDER_MANAGER_URL:"https://zllz247e38.execute-api.us-west-2.amazonaws.com/prod",SYSTEM_REGISTRATION_URL:"https://zllz247e38.execute-api.us-west-2.amazonaws.com/prod",SYSTEM_ADMIN_ROLE:"SystemAdmin",SYSTEM_SUPPORT_ROLE:"SystemUser",TENANT_ADMIN_ROLE:"TenantAdmin",TENANT_USER_ROLE:"TenantUser"}),angular.module("clientApp").controller("MainCtrl",["$scope","$timeout","$http","$location","Constants",function(a,b,c,d,e){function f(a,b){c.get(a+"/health").then(function(a){b(200==a.status?!0:!1)})["catch"](function(a){b(!1)})}a.authenticationManagerHealthy=!0,a.tenantManagerHealthy=!0,a.tenantRegistrationHealthy=!0,a.orderManagerHealthy=!0,a.productManagerHealthy=!0,a.userManagerHealthy=!0;var g=function(){b(function(){"/"===d.path()&&(f(e.AUTH_MANAGER_URL+"/auth",function(b){a.authenticationManagerHealthy=b}),f(e.TENANT_MANAGER_URL+"/tenant",function(b){a.tenantManagerHealthy=b}),f(e.TENANT_REGISTRATION_URL+"/reg",function(b){a.tenantRegistrationHealthy=b}),f(e.ORDER_MANAGER_URL+"/order",function(b){a.orderManagerHealthy=b}),f(e.PRODUCT_MANAGER_URL+"/product",function(b){a.productManagerHealthy=b}),f(e.USER_MANAGER_URL+"/user",function(b){a.userManagerHealthy=b})),g()},5e3)};g()}]),angular.module("clientApp").controller("LoginCtrl",["$scope","$rootScope","$location","$route","$http","Constants","jwtHelper",function(a,b,c,d,e,f,g){a.formSubmit=function(){var h={userName:a.username,password:a.password};e.post(f.AUTH_MANAGER_URL+"/auth",h).then(function(e){if(console.log("Login success"),e.data.newPasswordRequired)b.currentUser=a.username,c.path("/confirm");else{b.isUserLoggedIn=!0,b.currentUser=a.username,b.bearerToken=e.data.token;var f=g.decodeToken(b.bearerToken);b.userDisplayName=f.given_name+" "+f.family_name,b.userRole=f["custom:role"],a.error="",a.username="",a.password="",c.path("/"),d.reload()}})["catch"](function(){b.isUserLoggedIn=!1,b.identityToken="",b.userDisplayName="",b.userRole="",a.error="Invalid login. Please try again.",console.log("Login failed")})}}]),angular.module("clientApp").controller("RegisterCtrl",["$scope","$http","$location","Constants",function(a,b,c,d){a.formSubmit=function(){if(a.tenant.email||a.tenant.companyName){var c={id:"",companyName:a.tenant.companyName,accountName:a.tenant.companyName,ownerName:a.tenant.email,tier:a.tenant.plan,email:a.tenant.email,userName:a.tenant.email,firstName:a.tenant.firstName,lastName:a.tenant.lastName};b.post(d.TENANT_REGISTRATION_URL+"/reg",c).then(function(b){console.log("Registration success"),a.hideRegistrationForm=!0,a.showSuccessMessage=!0})["catch"](function(b){a.error="Unable to create new account",console.log("Registration failed: ",b)})}else a.error="User name and company name are required. Please enter these values."}}]),angular.module("clientApp").controller("ConfirmCtrl",["$scope","$rootScope","$location","$route","$http","Constants","jwtHelper",function(a,b,c,d,e,f,g){a.formSubmit=function(){if(a.newPassword!==a.confirmPassword)a.error="Passwords do not match.";else if(a.newPassword.length<6)a.error="Password must be 6 or more characters long";else if(a.currentPassword||a.newPassword||a.confirmPassword)var h={userName:b.currentUser,password:a.currentPassword,newPassword:a.newPassword};else a.error="Current, new, and confirm passwords are required. Please enter these values.";e.post(f.AUTH_MANAGER_URL+"/auth",h).then(function(e){console.log("Login success"),b.isUserLoggedIn=!0,b.bearerToken=e.data.token;var f=g.decodeToken(b.bearerToken);b.userDisplayName=f.given_name+" "+f.family_name,b.userRole=f["custom:role"],a.error="",a.username="",a.password="",c.path("/"),d.reload()})["catch"](function(c){b.isUserLoggedIn=!1,b.identityToken="",b.userDisplayName="",a.error="Invalid login. Please try again.",console.log("Login failed")})}}]),angular.module("clientApp").controller("UsersCtrl",["$scope","$http","Constants",function(a,b,c){b.get(c.USER_MANAGER_URL+"/users").then(function(b){a.users=b.data})["catch"](function(a){console.error("Error getting users",a.status,a.data)})["finally"](function(){console.log("Finished getting users")})}]),angular.module("clientApp").controller("ProductsCtrl",["$scope","$http","Constants",function(a,b,c){b.get(c.PRODUCT_MANAGER_URL+"/products").then(function(b){a.products=b.data})["catch"](function(a){console.error("Error getting products",a.status,a.data)})["finally"](function(){console.log("Finished getting products")})}]),angular.module("clientApp").controller("ProductAddCtrl",["$scope","$location","$http","$route","Constants",function(a,b,c,d,e){a.addProduct=!0,a.saveProduct=function(){var b={sku:a.product.sku,title:a.product.title,description:a.product.description,condition:a.product.condition,conditionDescription:a.product.conditionDescription,numberInStock:a.product.numberInStock,unitCost:a.product.unitCost};c.post(e.PRODUCT_MANAGER_URL+"/product",b).then(function(b){console.log("Product added"),a.product.sku="",a.product.title="",a.product.description="",a.product.condition="1",a.product.conditionDescription="",a.product.numberInStock=0,a.product.unitCost=0,d.reload()})["catch"](function(b){a.error="Error saving product: "+b.message,console.log("Error saving product: "+b.message)})},a.cancel=function(){b.path("/products")}}]),angular.module("clientApp").controller("ProductEditCtrl",["$scope","$location","$http","$route","$routeParams","Constants",function(a,b,c,d,e,f){a.product={},a.editProduct=!0,c.get(f.PRODUCT_MANAGER_URL+"/product/"+e.id).then(function(b){a.product=b.data})["catch"](function(b){a.error="Error getting product: "+b.message,console.log("Error getting product: "+b.message)})["finally"](function(){console.log("Finished getting product")}),a.saveProduct=function(){var d={productId:a.product.productId,sku:a.product.sku,title:a.product.title,description:a.product.description,condition:a.product.condition,conditionDescription:a.product.conditionDescription,numberInStock:a.product.numberInStock,unitCost:a.product.unitCost};c.put(f.PRODUCT_MANAGER_URL+"/product",d).then(function(a){console.log("Product updated"),b.path("/products")})["catch"](function(b){a.error="Error updating product: "+b.message,console.log("Error updating product: "+b.message)})},a.cancel=function(){b.path("/products")}}]),angular.module("clientApp").controller("ProductDeleteCtrl",["$scope","$location","$http","$route","$routeParams","Constants",function(a,b,c,d,e,f){c.get(f.PRODUCT_MANAGER_URL+"/product/"+e.id).then(function(b){a.product=b.data})["catch"](function(b){a.error="Error getting order: "+b.message,console.log("Error getting product: "+b.message)})["finally"](function(){console.log("Finished getting product")}),a.deleteProduct=function(){c["delete"](f.PRODUCT_MANAGER_URL+"/product/"+a.product.productId).then(function(a){console.log("Product delete"),b.path("/products")})["catch"](function(b){a.error="Error deleting product: "+b.message,console.log("Error deleting product: "+b.message)})},a.back=function(){b.path("/products")}}]),angular.module("clientApp").controller("TenantsCtrl",["$scope","$http","Constants",function(a,b,c){b.get(c.TENANT_MANAGER_URL+"/tenants").then(function(b){a.tenants=b.data})["catch"](function(a){console.error("Error getting tenants",a.status,a.data)})["finally"](function(){console.log("Finished getting tenants")})}]),angular.module("clientApp").controller("TenantEditCtrl",["$scope","$location","$http","$route","$routeParams","Constants",function(a,b,c,d,e,f){a.tenant={},c.get(f.TENANT_MANAGER_URL+"/tenant/"+e.id).then(function(b){a.tenant=b.data})["catch"](function(b){a.error="Error getting tenant: "+b.message,console.log("Error getting tenant: "+b.message)})["finally"](function(){console.log("Finished getting tenant")}),a.saveTenant=function(){var d={id:a.tenant.id,companyName:a.tenant.companyName,accountName:a.tenant.accountName,ownerName:a.tenant.ownerName,tier:a.tenant.tier,status:a.tenant.status};c.put(f.TENANT_MANAGER_URL+"/tenant",d).then(function(a){console.log("Tenant updated"),b.path("/tenants")})["catch"](function(b){a.error="Error updating tenant: "+b.message,console.log("Error updating tenant: "+b.message)})},a.cancel=function(){b.path("/tenants")}}]),angular.module("clientApp").controller("TenantDeleteCtrl",["$scope","$location","$http","$route","$routeParams","Constants",function(a,b,c,d,e,f){c.get(f.TENANT_MANAGER_URL+"/tenant/"+e.id).then(function(b){a.tenant=b.data})["catch"](function(b){a.error="Error getting tenant: "+b.message,console.log("Error getting tenant: "+b.message)})["finally"](function(){console.log("Finished getting tenant")}),a.deleteTenant=function(){({id:a.tenant.id,title:a.tenant.title});c["delete"](f.TENANT_MANAGER_URL+"/tenant/"+a.tenant.id).then(function(a){console.log("Tenant delete"),b.path("/tenants")})["catch"](function(b){a.error="Error deleting tenant: "+b.message,console.log("Error deleting tenant: "+b.message)})},a.back=function(){b.path("/tenants")}}]),angular.module("clientApp").controller("UserAddCtrl",["$scope","$location","$http","$route","$rootScope","Constants",function(a,b,c,d,e,f){a.addUser=!0,a.user={},a.user.role=e.userRole,a.saveUser=function(){var b={firstName:a.user.firstName,lastName:a.user.lastName,userName:a.user.userName,role:a.user.role};c.post(f.USER_MANAGER_URL+"/user",b).then(function(b){console.log("User added"),a.user.firstName="",a.user.lastName="",a.user.userName="",a.user.role=e.userRole,d.reload()})["catch"](function(b){a.error="Error saving user: "+b.message,console.log("Error saving user: "+b.message)})},a.cancel=function(){b.path("/users")}}]),angular.module("clientApp").controller("UserEditCtrl",["$scope","$location","$http","$route","$routeParams","Constants",function(a,b,c,d,e,f){a.user={},a.editUser=!0,c.get(f.USER_MANAGER_URL+"/user/"+e.id).then(function(b){a.user=b.data})["catch"](function(b){a.error="Error getting user",console.log("Error getting user: "+b.message)})["finally"](function(){console.log("Finished getting user")}),a.saveUser=function(){var d={userName:a.user.userName,firstName:a.user.firstName,lastName:a.user.lastName,role:a.user.role};c.put(f.USER_MANAGER_URL+"/user",d).then(function(a){console.log("User updated"),b.path("/users")})["catch"](function(b){a.error="Error updating user: "+b.message,console.log("Error updating user: "+b.message)})},a.cancel=function(){b.path("/users")}}]),angular.module("clientApp").controller("UserDeleteCtrl",["$scope","$location","$http","$route","$routeParams","Constants",function(a,b,c,d,e,f){c.get(f.USER_MANAGER_URL+"/user/"+e.id).then(function(b){a.user=b.data})["catch"](function(b){a.error="Error getting user: "+b.message,console.log("Error getting user: "+b.message)})["finally"](function(){console.log("Finished getting user")}),a.deleteUser=function(){c["delete"](f.USER_MANAGER_URL+"/user/"+a.user.userName).then(function(a){console.log("User delete"),b.path("/users")})["catch"](function(b){a.error="Error deleting user: "+b.message,console.log("Error deleting user: "+b.message)})},a.back=function(){b.path("/users")}}]),angular.module("clientApp").controller("OrdersCtrl",["$scope","$http","$filter","Constants",function(a,b,c,d){b.get(d.ORDER_MANAGER_URL+"/orders").then(function(b){a.orders=b.data,a.filteredOrders=a.orders.slice();var c={"No Filter":""},d="";for(d in a.orders){var e=a.orders[d].productDescription;e in c||(c[e]="")}a.productFilterValues=Object.keys(c)})["catch"](function(a){console.error("Error getting orders",a.status,a.data)})["finally"](function(){console.log("Finished getting orders")}),a.orderFilterChanged=function(b){"No Filter"===b?a.filteredOrders=a.orders:a.filteredOrders=c("filter")(a.orders,{productDescription:b})}}]),angular.module("clientApp").controller("OrderAddCtrl",["$scope","$location","$http","$route","$rootScope","Constants",function(a,b,c,d,e,f){a.order={},a.addOrder=!0,c.get(f.PRODUCT_MANAGER_URL+"/products").then(function(b){a.products=b.data,a.order.dateOrdered=new Date,a.order.quantity=1,a.order.unitCost=0,a.productMap={},a.products.forEach(function(b){a.productMap[b.productId]=b}),a.products&&(a.order.productId=a.products[0].productId,a.order.unitCost=a.products[0].unitCost)})["catch"](function(a){console.log("Error getting products: "+a.message)})["finally"](function(){console.log("Finished getting products")}),a.saveOrder=function(){var b={productId:a.order.productId,productSKU:a.productMap[a.order.productId].sku,productDescription:a.productMap[a.order.productId].title,dateOrdered:new Date(a.order.dateOrdered),orderedBy:e.currentUser,quantity:a.order.quantity,unitCost:a.order.unitCost};c.post(f.ORDER_MANAGER_URL+"/order",b).then(function(a){console.log("Order added")})["catch"](function(b){a.error="Error saving order: "+b.message,console.log("Error saving order: "+b.message)});var g=a.productMap[a.order.productId];g.numberInStock-=a.order.quantity,c.put(f.PRODUCT_MANAGER_URL+"/product",g).then(function(a){console.log("Product inventory updated")})["catch"](function(b){a.error="Error updating product inventory: "+b.message,console.log("Error updating product inventory: "+b.message)}),a.order={},a.order.quantity=1,d.reload()},a.productChanged=function(b){a.order.unitCost=a.productMap[a.order.productId].unitCost},a.cancel=function(){b.path("/orders")}}]),angular.module("clientApp").controller("OrderEditCtrl",["$scope","$location","$http","$route","$routeParams","$rootScope","Constants",function(a,b,c,d,e,f,g){a.editOrder=!0,c.get(g.ORDER_MANAGER_URL+"/order/"+e.id).then(function(b){a.order=b.data,a.order.dateOrdered=new Date(a.order.dateOrdered),a.order.originalQantity=a.order.quantity})["catch"](function(a){console.log("Error getting order: "+a.message)})["finally"](function(){console.log("Finished getting order")}),c.get(g.PRODUCT_MANAGER_URL+"/products").then(function(b){a.products=b.data,a.productMap={},a.products.forEach(function(b){a.productMap[b.productId]=b})})["catch"](function(a){console.log("Error getting products: "+a.message)})["finally"](function(){console.log("Finished getting products")}),a.saveOrder=function(){var e={orderId:a.order.orderId,productId:a.order.productId,productSKU:a.productMap[a.order.productId].sku,productDescription:a.productMap[a.order.productId].title,orderedBy:f.currentUser,dateOrdered:a.order.dateOrdered,quantity:a.order.quantity,unitCost:a.order.unitCost};if(c.put(g.ORDER_MANAGER_URL+"/order",e).then(function(a){console.log("Order updated"),b.path("/orders")})["catch"](function(b){a.error="Error updating order: "+b.message,console.log("Error updating order: "+b.message)}),a.order.quantity!=a.order.originalQantity){var h=a.productMap[a.order.productId];a.order.quantity>a.order.originalQantity?h.numberInStock-=a.order.quantity-a.order.originalQantity:h.numberInStock+=a.order.originalQantity-a.order.quantity,c.put(g.PRODUCT_MANAGER_URL+"/product",h).then(function(a){console.log("Product inventory updated")})["catch"](function(b){a.error="Error updating product inventory: "+b.message,console.log("Error updating product inventory: "+b.message)})}a.order={},a.order.quantity=1,d.reload()},a.productChanged=function(b){a.order.unitCost=a.productMap[a.order.productId].unitCost},a.cancel=function(){b.path("/orders")}}]),angular.module("clientApp").controller("OrderDeleteCtrl",["$scope","$location","$http","$route","$routeParams","Constants",function(a,b,c,d,e,f){c.get(f.ORDER_MANAGER_URL+"/order/"+e.id).then(function(b){a.order=b.data})["catch"](function(b){a.error="Error getting order: "+b.message,console.log("Error getting order: "+b.message)})["finally"](function(){console.log("Finished getting order")}),a.deleteOrder=function(){c["delete"](f.ORDER_MANAGER_URL+"/order/"+a.order.orderId).then(function(a){console.log("Order delete"),b.path("/orders")})["catch"](function(b){a.error="Error deleting order: "+b.message,console.log("Error deleting order: "+b.message)})},a.back=function(){b.path("/orders")}}]),angular.module("clientApp").controller("ProductViewCtrl",["$scope","$location","$http","$route","$routeParams","Constants",function(a,b,c,d,e,f){c.get(f.PRODUCT_MANAGER_URL+"/product/"+e.id).then(function(b){a.product=b.data})["catch"](function(a){console.log("Error getting product: "+a.message)})["finally"](function(){console.log("Finished getting product")})}]),angular.module("clientApp").controller("UserEnableCtrl",["$scope","$location","$http","$route","$routeParams","Constants",function(a,b,c,d,e,f){a.user={},c.get(f.USER_MANAGER_URL+"/user/"+e.id).then(function(b){a.user=b.data})["catch"](function(b){a.error="Error getting user",console.log("Error getting user: "+b.message)})["finally"](function(){console.log("Finished getting user")}),a.yesPressed=function(){a.user.enabled?a.disableUser():a.enableUser()},a.enableUser=function(){c.put(f.USER_MANAGER_URL+"/user/enable",a.user).then(function(a){b.path("/users")})["catch"](function(b){a.error="Error enabling user",console.log("Error enabling user")})},a.disableUser=function(){c.put(f.USER_MANAGER_URL+"/user/disable/",a.user).then(function(a){b.path("/users")})["catch"](function(b){a.error="Error disabling user",console.log("Error disabling user")})},a.back=function(){b.path("/users")}}]),angular.module("clientApp").run(["$templateCache",function(a){a.put("views/confirm.html",'<div class="col-md-8 col-md-offset-1"> <h3>Congratulations on Your Successful Login!</h3> <p>Please change your password before proceeding</p> <form name="form" ng-submit="formSubmit()" role="form"> <div class="form-group"> <label for="currentPassword">Current Password</label> <input type="password" name="currentPassword" id="currentPassword" class="form-control" ng-model="currentPassword" required> </div> <div class="form-group"> <label for="newPassword">New Password</label> <input type="password" name="newPassword" id="newPassword" class="form-control" ng-model="newPassword" required> </div> <div class="form-group"> <label for="confirmPassword">Confirm New Password</label> <input type="password" name="confirmPassword" id="confirmPassword" class="form-control" ng-model="confirmPassword" required> </div> <div class="form-actions"> <button type="submit" class="btn btn-primary">Confirm</button> <br> <br> <div ng-if="error" class="alert alert-danger">{{ error }}</div> </div> </form> </div>'),a.put("views/login.html",'<div class="col-md-6 col-md-offset-3"> <h2>Login</h2> <form name="form" ng-submit="formSubmit()" role="form"> <div class="form-group"> <label for="username">Username</label> <input type="text" name="username" id="username" class="form-control" ng-model="username" required> </div> <div class="form-group"> <label for="password">Password</label> <input type="password" name="password" id="password" class="form-control" ng-model="password" required> </div> <div class="form-actions"> <button type="submit" class="btn btn-primary">Login</button> <a href="#!/register" class="btn btn-link">Register</a> <br> <br> <div ng-if="error" class="alert alert-danger">{{ error }}</div> </div> </form> </div>'),a.put("views/main.html",'<div class="jumbotron"> <div class="well" style="padding-top: 0px" ng-if="isSystemUser()"> <div> <img style="width:28px; float: left; margin-right: 5px" src="/images/monitor.db9ce943.png"> <h3 class="text-left">Service Health</h3> </div> <hr style="margin-top: 0px; margin-bottom: 8px; padding: 0px"> <div class="row"> <div class="col-sm-4"> <img class="health-image" ng-src="{{authenticationManagerHealthy && \'/images/green-circle.1f286740.png\' || \'/images/red-circle.5c7a0f1d.png\'}}"> <h5 class="text-left">Authentication Manager</h5> </div> <div class="col-sm-4"> <img class="health-image" ng-src="{{tenantManagerHealthy && \'/images/green-circle.1f286740.png\' || \'/images/red-circle.5c7a0f1d.png\'}}"> <h5 class="text-left">Tenant Manager</h5> </div> <div class="col-sm-4"> <img class="health-image" ng-src="{{tenantRegistrationHealthy && \'/images/green-circle.1f286740.png\' || \'/images/red-circle.5c7a0f1d.png\'}}"> <h5 class="text-left">Tenant Registration</h5> </div> </div> <br> <div class="row"> <div class="col-sm-4"> <img class="health-image" ng-src="{{userManagerHealthy && \'/images/green-circle.1f286740.png\' || \'/images/red-circle.5c7a0f1d.png\'}}"> <h5 class="text-left">User Manager</h5> </div> <div class="col-sm-4"> <img class="health-image" ng-src="{{orderManagerHealthy && \'/images/green-circle.1f286740.png\' || \'/images/red-circle.5c7a0f1d.png\'}}"> <h5 class="text-left">Order Manager</h5> </div> <div class="col-sm-4"> <img class="health-image" ng-src="{{productManagerHealthy && \'/images/green-circle.1f286740.png\' || \'/images/red-circle.5c7a0f1d.png\'}}"> <h5 class="text-left">Product Manager</h5> </div> </div> </div> <div class="well" style="padding-top: 0px"> <div> <img style="width:28px; float: left; margin-right: 5px" src="/images/chart.3e75b6a6.png"> <h3 class="text-left">System Metrics</h3> </div> <hr style="margin-top: 0px; margin-bottom: 8px; padding: 0px"> <div class="row"> <div class="col-sm-6"> <div class="panel panel-default"> <div class="panel-heading panel-heading-custom"> <h3 class="panel-title">Total Product Count</h3> </div> <div class="panel-body"> 1,414 </div> </div> </div> <div class="col-sm-6"> <div class="panel panel-default"> <div class="panel-heading panel-heading-custom"> <h3 class="panel-title">Total Order Count</h3> </div> <div class="panel-body"> 9,934 </div> </div> </div> </div> <div class="row"> <div class="col-sm-6"> <div class="panel panel-default"> <div class="panel-heading panel-heading-custom"> <h3 class="panel-title">Average Sale Price</h3> </div> <div class="panel-body"> $193.12 </div> </div> </div> <div class="col-sm-6"> <div class="panel panel-default"> <div class="panel-heading panel-heading-custom"> <h3 class="panel-title">Today\'s Order Count</h3> </div> <div class="panel-body"> 123 </div> </div> </div> </div> <div ng-if="isSystemUser()" class="row"> <div class="col-sm-6"> <div class="panel panel-default"> <div class="panel-heading panel-heading-custom"> <h3 class="panel-title">Tenant Count</h3> </div> <div class="panel-body"> 5 </div> </div> </div> <div class="col-sm-6"> <div class="panel panel-default"> <div class="panel-heading panel-heading-custom"> <h3 class="panel-title">User Count</h3> </div> <div class="panel-body"> 29 </div> </div> </div> </div> </div> </div>'),a.put("views/order-add.html",'<ng-include src="\'views/order-nav.html\'"></ng-include> <form role="form"> <div class="form-group"> <label for="productId">Product</label> <select class="form-control" id="productId" ng-model="order.productId" ng-change="productChanged(productId)" required> <option ng-repeat="product in products" ng-value="product.productId">{{product.title}}</option> </select> </div> <div class="form-group"> <label for="dateOrdered" class="control-label">Date Ordered</label> <input type="date" ng-model="order.dateOrdered" class="form-control" id="dateOrdered" required> </div> <div class="form-group"> <label for="quantity" class="control-label">Quantity</label> <input type="number" ng-model="order.quantity" class="form-control" id="quantity" required> </div> <div class="form-group"> <label for="unitCost" class="control-label">Unit Cost</label> <input type="number" ng-model="order.unitCost" class="form-control" id="unitCost" required> </div> <div class="form-group"> <label class="control-label">Total Cost</label> <p>{{ (order.quantity && order.unitCost) ? order.quantity * order.unitCost : 0 | currency }}</p> </div> <div class="form-group"> <input type="submit" class="btn btn-primary" ng-click="saveOrder()" value="Save"> <input type="submit" class="btn btn-secondary" ng-click="cancel()" value="Cancel"> <br> <br> <div ng-if="error" class="alert alert-danger">{{ error }}</div> </div> </form>'),a.put("views/order-delete.html",'<form role="form"> <p>Are you sure you wish to delete the order: {{ order.productDescription }}?</p> <div class="form-group"> <input type="submit" class="btn btn-danger" ng-click="deleteOrder()" value="Yes"> <button ng-click="back()" type="button" class="btn btn-default">No</button> </div> <div class="form-group"> <br> <br> <div ng-if="error" class="alert alert-danger">{{ error }}</div> </div> </form>'),a.put("views/order-edit.html","<ng-include src=\"'views/order-add.html'\"></ng-include>"),a.put("views/order-nav.html",'<h3 role="presentation" ng-hide="!addOrder">Add Order</h3> <h3 role="presentation" ng-hide="!editOrder">Edit Order</h3>'),a.put("views/orders.html",'<div class="container"> <div class="row"> <div class="col-md-10"> <div class="form-group"> <label>Product Filter: </label> <select id="productFilter" ng-model="orderFilter" ng-init="orderFilter=\'No Filter\'" ng-change="orderFilterChanged(orderFilter)">Product <option ng-repeat="itemVal in productFilterValues" ng-value="itemVal">{{itemVal}}</option> </select> </div> </div> <a class="btn btn-primary" href="#!/order/add"><span class="glyphicon glyphicon-plus"></span> Add Order</a> </div> </div> <table class="table table-striped"> <thead> <th>Product SKU</th> <th>Product Title</th> <th>Ordered By</th> <th>Order Date</th> <th>Quantity</th> <th>Unit Cost</th> <th>Total Cost</th> <th></th> </thead> <tbody> <col width="12%"> <col width="20%"> <col width="20%"> <col width="19%"> <col width="4%"> <col width="9%"> <col width="10%"> <col width="8%"> <tr ng-repeat="order in filteredOrders | orderBy: \'-datePlaced\'"> <td>{{ order.productSKU }}</td> <td>{{ order.productDescription }}</td> <td>{{ order.orderedBy }}</td> <td>{{ order.dateOrdered | date:\'MM-dd-yyyy HH:mm:ss\' }}</td> <td>{{ order.quantity }}</td> <td>{{ order.unitCost | currency }}</td> <td>{{ order.quantity * order.unitCost | currency }}</td> <td> <div class="button-group"> <a ng-href="/#!/order/edit/{{ order.orderId }}"><span class="glyphicon glyphicon-pencil"></span></a> <a ng-href="/#!/order/delete/{{ order.orderId }}"><span class="glyphicon glyphicon-trash"></span></a> </div> </td> </tr> </tbody> </table> '),a.put("views/product-add.html",'<ng-include src="\'views/product-nav.html\'"></ng-include> <form role="form"> <div class="form-group"> <label for="sku" class="control-label">SKU</label> <input type="text" ng-model="product.sku" class="form-control" id="sku" required> </div> <div class="form-group"> <label for="title" class="control-label">Title</label> <input type="text" ng-model="product.title" class="form-control" id="title" required> </div> <div class="form-group"> <label for="description" class="control-label">Description</label> <textarea ng-model="product.description" class="form-control" id="description" required></textarea> </div> <div class="form-group"> <label for="condition" class="control-label">Condition</label> <select class="form-control" id="condition" name="condition" ng-model="product.condition" ng-init="product.condition=\'Brand New\'" required> <option value="Brand New">Brand New</option> <option value="Refurbished" 2>Refubished</option> <option value="Scratch and Dent">Scratch and Dent</option> </select> </div> <div class="form-group"> <label for="conditionDescription" class="control-label">Condition Description</label> <textarea ng-model="product.conditionDescription" class="form-control" id="conditionDescription" required></textarea> </div> <div class="form-group"> <label for="numberInStock" class="control-label">Number in Stock</label> <input type="text" ng-model="product.numberInStock" class="form-control" id="numberInStock" required> </div> <div class="form-group"> <label for="unitCost" class="control-label">Unit Cost</label> <input type="number" ng-model="product.unitCost" class="form-control" id="unitCost" required> </div> <div class="form-group"> <input type="submit" class="btn btn-primary" ng-click="saveProduct()" value="Save"> <input type="submit" class="btn btn-secondary" ng-click="cancel()" value="Cancel"> <br> <br> <div ng-if="error" class="alert alert-danger">{{ error }}</div> </div> </form>'),
a.put("views/product-delete.html",'<form role="form"> <p>Are you sure you wish to delete the product: {{ product.title }}?</p> <div class="form-group"> <input type="submit" class="btn btn-danger" ng-click="deleteProduct()" value="Yes"> <button ng-click="back()" type="button" class="btn btn-default">No</button> </div> <div class="form-group"> <br> <br> <div ng-if="error" class="alert alert-danger">{{ error }}</div> </div> </form>'),a.put("views/product-edit.html","<ng-include src=\"'views/product-add.html'\"></ng-include>"),a.put("views/product-nav.html",'<h3 role="presentation" ng-hide="!addProduct">Add Product</h3> <h3 role="presentation" ng-hide="!editProduct">Edit Product</h3>'),a.put("views/product-view.html",'<h3>View Product</h3> <form role="form"> <div class="form-group"> <label class="control-label" for="sku">SKU</label> <p ng-model="product.sku" ng-readonly="true" class="form-control" id="sku">{{product.sku}}</p> </div> <div class="form-group"> <label class="control-label" for="title">Title</label> <p ng-model="product.title" ng-readonly="true" class="form-control" id="title">{{product.title}}</p> </div> <div class="form-group"> <label class="control-label" for="description">Description</label> <textarea ng-model="product.description" ng-readonly="true" class="form-control" id="description">{{product.description}}</textarea> </div> <div class="form-group"> <label class="control-label" for="condition">Condition</label> <p ng-model="product.condition" ng-readonly="true" class="form-control" id="condition">{{product.condition}}</p> </div> <div class="form-group"> <label class="control-label" for="conditionDescription">Condition Description</label> <textarea ng-model="product.conditionDescription" ng-readonly="true" class="form-control" id="conditionDescription">{{product.conditionDescription}}</textarea> </div> <div class="form-group"> <label class="control-label" for="numberInStock">In Stock</label> <p ng-model="product.numberInStock" ng-readonly="true" class="form-control" id="numberInStock">{{product.numberInStock}}</p> </div> <div class="form-group"> <label class="control-label" for="unitCost">Unit Cost</label> <p ng-model="product.unitCost" ng-readonly="true" class="form-control" id="unitCost">{{product.unitCost | currency}}</p> </div> </form>'),a.put("views/products.html",'<div align="right"> <a class="btn btn-primary" ng-if="isTenantAdminUser()" href="#!/product/add"><span class="glyphicon glyphicon-plus"></span> Add Product</a> </div> <table class="table table-striped"> <thead> <th>SKU</th> <th>Title</th> <th>Condition</th> <th>In Stock</th> <th>Unit Cost</th> <th ng-if="isTenantAdminUser()"></th> </thead> <tbody> <col width="15%"> <col width="25%"> <col width="23%"> <col width="15%"> <col width="15%"> <col ng-if="isTenantAdminUser()" width="7%"> <tr ng-repeat="product in products"> <td><a ng-href="/#!/product/{{ product.productId }}">{{ product.sku }}</a></td> <td>{{ product.title }}</td> <td>{{ product.condition }}</td> <td>{{ product.numberInStock }}</td> <td>{{ product.unitCost | currency }}</td> <td ng-if="isTenantAdminUser()"> <div class="button-group"> <a ng-href="/#!/product/edit/{{ product.productId }}"><span class="glyphicon glyphicon-pencil"></span></a> <a ng-href="/#!/product/delete/{{ product.productId }}"><span class="glyphicon glyphicon-trash"></span></a> </div> </td> </tr> </tbody> </table> '),a.put("views/register.html",'<div ng-show="!hideRegistrationForm" class="col-md-6 col-md-offset-3"> <h2>Register</h2> <form name="form" ng-submit="formSubmit()" role="form"> <div class="form-group"> <label for="firstName">First name</label> <input type="text" name="firstName" id="firstName" class="form-control" ng-model="tenant.firstName" required> </div> <div class="form-group"> <label for="lastName">Last name</label> <input type="text" name="lastName" id="lastName" class="form-control" ng-model="tenant.lastName" required> </div> <div class="form-group"> <label for="email">Email Address</label> <input type="text" name="email" id="email" class="form-control" ng-model="tenant.email" required> </div> <div class="form-group"> <label for="companyName">Company</label> <input type="text" name="companyName" id="companyName" class="form-control" ng-model="tenant.companyName" required> </div> <div class="form-group"> <label for="plan">Plan</label> <select class="form-control" id="plan" name="plan" ng-model="tenant.plan" ng-init="tenant.plan=\'Free Tier\'" required> <option value="Free Tier">Free Tier</option> <option value="Standard Tier">Standard Tier</option> <option value="Professional Tier">Professional Tier</option> </select> </div> <div class="form-actions"> <button type="submit" class="btn btn-primary">Register</button> <a href="#!/login" class="btn btn-link">Cancel</a> <br> <br> <div ng-if="error" class="alert alert-danger">{{ error }}</div> </div> </form> </div> <div ng-show="showSuccessMessage" class="col-md-8 col-md-offset-1"> <h3>Success</h3> <p>Your account has been registered. An email with login instructions is on its way.</p> </div>'),a.put("views/tenant-delete.html",'<form role="form"> <p>Are you sure you wish to delete the tenant: {{ tenant.companyName }}?</p> <div class="form-group"> <input type="submit" class="btn btn-danger" ng-click="deleteTenant()" value="Yes"> <button ng-click="back()" type="button" class="btn btn-default">No</button> </div> <div class="form-group"> <br> <br> <div ng-if="error" class="alert alert-danger">{{ error }}</div> </div> </form>'),a.put("views/tenant-edit.html",'<h3>Edit Tenant</h3> <form role="form"> <div class="form-group"> <label for="companyName" class="control-label">Company Name</label> <input type="text" ng-model="tenant.companyName" class="form-control" id="companyName" required> </div> <div class="form-group"> <label for="accountName" class="control-label">Account Name</label> <input type="text" ng-model="tenant.accountName" class="form-control" id="accountName" required> </div> <div class="form-group"> <label for="ownerName" class="control-label">Owner Name</label> <input type="text" ng-model="tenant.ownerName" class="form-control" id="ownerName" required> </div> <div class="form-group"> <label for="tier">Plan</label> <select class="form-control" id="tier" name="tier" ng-model="tenant.tier" ng-init="tenant.tier=\'Free Tier\'" required> <option value="Free Tier">Free Tier</option> <option value="Standard Tier">Standard Tier</option> <option value="Professional Tier">Professional Tier</option> </select> </div> <div class="form-group"> <label for="status" class="control-label">Status</label> <select class="form-control" id="status" name="status" ng-model="tenant.status" ng-init="tenant.status=\'Active\'" required> <option value="Active">Active</option> <option value="Inactive" 2>Inactive</option> </select> </div> <input type="submit" class="btn btn-primary" ng-click="saveTenant()" value="Save"> <input type="submit" class="btn btn-secondary" ng-click="cancel()" value="Cancel"> <br> <br> <div ng-if="error" class="alert alert-danger">{{ error }}</div> </form>'),a.put("views/tenants.html",'<table class="table table-striped"> <thead> <th>Company Name</th> <th>Account Name</th> <th>Owner</th> <th>Plan</th> <th>Status</th> <th ng-if="isSystemAdminUser()"></th> </thead> <tbody> <col width="20%"> <col width="20%"> <col width="21%"> <col width="20%"> <col width="12%"> <col ng-if="isSystemAdminUser()" width="7%"> <tr ng-repeat="tenant in tenants"> <td>{{ tenant.companyName }}</td> <td>{{ tenant.accountName }}</td> <td>{{ tenant.ownerName }}</td> <td>{{ tenant.tier }}</td> <td>{{ tenant.status }}</td> <td ng-if="isSystemAdminUser()"> <div class="button-group"> <a ng-href="/#!/tenant/edit/{{ tenant.id }}"><span class="glyphicon glyphicon-pencil"></span></a> <a ng-href="/#!/tenant/delete/{{ tenant.id }}"><span class="glyphicon glyphicon-trash"></span></a> </div> </td> </tr> </tbody> </table> '),a.put("views/user-add.html",'<ng-include src="\'views/user-nav.html\'"></ng-include> <form role="form"> <div class="form-group"> <label for="userName" class="control-label">Email</label> <input type="text" ng-model="user.userName" class="form-control" id="userName" required> </div> <div class="form-group"> <label for="firstName" class="control-label">First Name</label> <input type="text" ng-model="user.firstName" class="form-control" id="firstName" required> </div> <div class="form-group"> <label for="lastName" class="control-label">Last Name</label> <input type="text" ng-model="user.lastName" class="form-control" id="lastName" required> </div> <div class="form-group"> <label for="role" class="control-label">Role</label> <select class="form-control" id="role" name="role" ng-model="user.role" ng-init="user.role" required> <option ng-if="isSystemUser()" value="SystemAdmin">System Administrator</option> <option ng-if="isSystemUser()" value="SystemUser">Customer Support</option> <option ng-if="!isSystemUser()" value="TenantAdmin">Administrator</option> <option ng-if="!isSystemUser()" value="TenantUser">Order Manager</option> </select> </div> <div class="form-group"> <input type="submit" class="btn btn-primary" ng-click="saveUser()" value="Save"> <input type="submit" class="btn btn-secondary" ng-click="cancel()" value="Cancel"> <br> <br> <div ng-if="error" class="alert alert-danger">{{ error }}</div> </div> </form>'),a.put("views/user-delete.html",'<form role="form"> <p>Are you sure you wish to delete the user: {{ user.userName }}?</p> <div class="form-group"> <input type="submit" class="btn btn-danger" ng-click="deleteUser()" value="Yes"> <button ng-click="back()" type="button" class="btn btn-default">No</button> </div> <div class="form-group"> <br> <br> <div ng-if="error" class="alert alert-danger">{{ error }}</div> </div> </form>'),a.put("views/user-edit.html","<ng-include src=\"'views/user-add.html'\"></ng-include>"),a.put("views/user-enable.html",'<form role="form"> <p>Are you sure you wish to {{user.enabled? \'disable\' : \'enable\' }} user: {{ user.userName }}?</p> <div class="form-group"> <input type="submit" class="btn btn-danger" ng-click="yesPressed()" value="Yes"> <button ng-click="back()" type="button" class="btn btn-default">No</button> </div> <div class="form-group"> <br> <br> <div ng-if="error" class="alert alert-danger">{{ error }}</div> </div> </form>'),a.put("views/user-nav.html",'<h3 role="presentation" ng-hide="!addUser">Add User</h3> <h3 role="presentation" ng-hide="!editUser">Edit User</h3>'),a.put("views/users.html",'<div align="right"> <a class="btn btn-primary" href="#!/user/add"><span class="glyphicon glyphicon-plus"></span> Add User</a> </div> <table class="table table-striped"> <thead> <th>First Name</th> <th>Last Name</th> <th>User Name</th> <th>Role</th> <th>Active</th> <th>Date Created</th> <th></th> </thead> <tbody> <col width="12%"> <col width="11%"> <col width="16%"> <col width="15%"> <col width="10%"> <col width="22%"> <col width="10%"> <tr ng-repeat="user in users"> <td>{{ user.firstName }}</td> <td>{{ user.lastName }}</td> <td>{{ user.userName }}</td> <td>{{ roleToDisplayName(user.role) }}</td> <td>{{ user.enabled ? \'Active\' : \'Inactive\' }}</td> <td>{{ user.dateCreated | date:\'yyyy-MM-dd HH:mm:ss\'}}</td> <td> <div class="button-group"> <a title="Edit" ng-href="/#!/user/edit/{{ user.userName }}"><span class="glyphicon glyphicon-pencil"></span></a> <a title="Delete" ng-href="/#!/user/delete/{{ user.userName }}"><span class="glyphicon glyphicon-trash"></span></a> <a title="Enable/Disable" ng-href="/#!/user/enable/{{ user.userName }}"><span class="glyphicon glyphicon-check"></span></a> </div> </td> </tr> </tbody> </table> ')}]);